/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package persona;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Point;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.math3.stat.regression.SimpleRegression;
import org.math.plot.Plot2DPanel;
import org.math.plot.plotObjects.BaseLabel;

/**
 *
 * @author audir
 */
public class ContornoPersona extends javax.swing.JFrame {

    /**
     * Creates new form ContornoPersona
     */
    int[] CoX = new int[100000];
    int[] CoY = new int[100000];
    int i = 0;

    public ContornoPersona() {
        initComponents();
        setLocationRelativeTo(null);
        lblImagen.setSize(980, 620);
        setVisible(true);
        setTitle("Contorno de Persona");
        JOptionPane.showMessageDialog(null, "EL BOTON PUNTOS GUARDADOS, GUARDAR PUNTOS"
                + " SOLO FUNCIONARA SI SE TIENE LA RUTA CORRECTA DEL ARCHIVO TXT"
                + "\n ASÍ QUE SE RECOMIENDA SOLO TRABAJAR CON LOS PUNTOS EN TIEMPO DE EJECUCIÓN  "
                + "\n GRACIAS POR SU COMPRENSIÓN :D");
    }
    ArrayList<Point> lista = new ArrayList<Point>();
    int global = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImagen = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnCargarImagen = new javax.swing.JButton();
        btnCargarGuardado = new javax.swing.JButton();
        btnCargarPuntos = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        lblCoordenadas = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnCargarImagen.setText("Cargar Imagen");
        btnCargarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarImagenActionPerformed(evt);
            }
        });

        btnCargarGuardado.setText("Cargar Puntos Guardados");
        btnCargarGuardado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarGuardadoActionPerformed(evt);
            }
        });

        btnCargarPuntos.setText("Cargar Puntos (Tiempo de Ejecución)");
        btnCargarPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarPuntosActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Borrar Imagen");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar Puntos");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel1.setText("Las coordenadas son:");

        jButton1.setText("Graficar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCargarGuardado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCargarPuntos, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                    .addComponent(btnCargarImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblCoordenadas, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblCoordenadas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCargarPuntos, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCargarGuardado, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnCargarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lblImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 972, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        Graphics g = this.getGraphics();
        g.drawRect(evt.getX(), evt.getY(), 4, 4);
        int x = evt.getX(), y = evt.getY();
        CoX[i] = x;
        CoY[i] = y;

        lista.add(new Point(evt.getX(), evt.getY()));

        /*if (lista.size() > 1) {
            g.drawLine(lista.get(lista.size() - 1).x, lista.get(lista.size() - 1).y,
                    lista.get(lista.size() - 2).x, lista.get(lista.size() - 2).y);
        }*/
        i++;
        global = i;
    }//GEN-LAST:event_formMousePressed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        lblCoordenadas.setText(evt.getX() + " , " + evt.getY());
    }//GEN-LAST:event_formMouseMoved

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        lblImagen.setIcon(null);
        this.paint(this.getGraphics());
    }//GEN-LAST:event_btnLimpiarActionPerformed
    File fichero;
    private void btnCargarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarImagenActionPerformed
        //lblImagen.setIcon(new ImageIcon("C:\\Users\\audir\\Pictures\\Camera Roll\\ftBuena.jpg"));
        int resultado;
        Foto ft = new Foto();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG y PNG", "jpg", "png");

        ft.jfchCargarfoto.setFileFilter(filtro);

        resultado = ft.jfchCargarfoto.showOpenDialog(null);

        if (JFileChooser.APPROVE_OPTION == resultado) {

            fichero = ft.jfchCargarfoto.getSelectedFile();

            try {

                ImageIcon icon = new ImageIcon(fichero.toString());

                Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_DEFAULT));
                lblImagen.setText(null);
                lblImagen.setIcon(icono);

            } catch (Exception ex) {

                JOptionPane.showMessageDialog(null, "Error abriendo la                   imagen " + ex);

            }

        }

    }//GEN-LAST:event_btnCargarImagenActionPerformed

    private void btnCargarPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarPuntosActionPerformed
        Graphics g = this.getGraphics();
        for (int j = 0; j < i; j++) {
            g.drawRect(CoX[j], CoY[j], 4, 4);
            int x = CoX[j], y = CoY[j];
            CoX[j] = x;
            CoY[j] = y;

            /* lista.add(new Point(CoX[j], CoY[j]));

            if (lista.size() > 1) {
                g.drawLine(lista.get(lista.size() - 1).x, lista.get(lista.size() - 1).y,
                        lista.get(lista.size() - 2).x, lista.get(lista.size() - 2).y);*/
            //}
        }
       // global = i;
    }//GEN-LAST:event_btnCargarPuntosActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            String ruta = "C:\\Users\\audir\\Documents\\IC-801\\PROGRAMACION LOGICA Y FUNCIONAL\\Programa\\CoX.txt";
            String ruta1 = "C:\\Users\\audir\\Documents\\IC-801\\PROGRAMACION LOGICA Y FUNCIONAL\\Programa\\CoY.txt";
            File file = new File(ruta);
            File file1 = new File(ruta1);
            if (!file.exists() && !file1.exists()) {
                file.createNewFile();
                file1.createNewFile();
            }
            FileWriter fw = new FileWriter(file);
            FileWriter fw1 = new FileWriter(file1);
            BufferedWriter bw = new BufferedWriter(fw);
            BufferedWriter bw1 = new BufferedWriter(fw1);
            for (int j = 0; j < i; j++) {
                bw.write(CoX[j] + " ");
                bw1.write(CoY[j] + " ");
            }
            bw.close();
            bw1.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCargarGuardadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarGuardadoActionPerformed

        int numero;
        int z = 0, zz = 0;
        File f = new File("C:\\Users\\audir\\Documents\\IC-801\\PROGRAMACION LOGICA Y FUNCIONAL\\Programa\\CoX.txt");
        try (Scanner entrada = new Scanner(f)) {
            while (entrada.hasNextInt()) {
                numero = entrada.nextInt();
                CoX[z] = numero;
                z++;     
            }
        } catch (Exception e) {
        }

        File f1 = new File("C:\\Users\\audir\\Documents\\IC-801\\PROGRAMACION LOGICA Y FUNCIONAL\\Programa\\CoY.txt");
        try (Scanner entrada = new Scanner(f1)) {
            while (entrada.hasNextInt()) {
                numero = entrada.nextInt();
                CoY[zz] = numero;
                zz++;
            }
        } catch (Exception e) {
        }

        Graphics g = this.getGraphics();
        for (int j = 0; j < z; j++) {
            g.drawRect(CoX[j], CoY[j], 4, 4);
            int x = CoX[j], y = CoY[j];
            CoX[j] = x;
            CoY[j] = y;

            /*lista.add(new Point(CoX[j], CoY[j]));

            if (lista.size() > 1) {
                g.drawLine(lista.get(lista.size() - 1).x, lista.get(lista.size() - 1).y,
                        lista.get(lista.size() - 2).x, lista.get(lista.size() - 2).y);
            }*/
        }
        global = z;
    }//GEN-LAST:event_btnCargarGuardadoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //double[] xl = {2, 8, 3, 1, 4, 5, 6, 3, 0, 4, 7, 5};
        //double[] y1 = {8, 10, 7, 5, 9, 8, 9, 7, 6, 8, 10, 9};
        //rectaXsobreY(xl, y1, 12);
        
        double[] x1 = new double[global];
        double[] y1 = new double[global];
        
        for (int j = 0; j < global; j++) {
            x1[j] = CoX[j];
            y1[j] = CoY[j];
        }
        Graficacion g = new Graficacion();
        for (int j = 0; j < x1.length; j++) {
            //System.out.println(" que paso "+ x1[j]);
        }
        g.rectaXsobreY(x1, y1, global);
        g.Regresion(x1, y1, global);
       // g.Regresion(xl, y1, 12);
       // g.rectaXsobreY(xl, y1, 12);
        //C:\Users\audir\Downloads\HOLA\hola\commons-math3-3.6.1-bin\commons-math3-3.6.1\commons-math3-3.6.1.jar
        //C:\Users\audir\Downloads\jmatharray-master\jmatharray-master\dist\jmatharray.jar
        //C:\Users\audir\Downloads\jmathio-master\jmathio-master\dist\jmathio.jar
     /*SimpleRegression sr = new SimpleRegression();
    Plot2DPanel plot = new Plot2DPanel();
    
    */
    
    
    
    }//GEN-LAST:event_jButton1ActionPerformed
    public void rectaXsobreY(double[] xx, double[] yy, int z) {
        double[] suma = new double[z];
        double[] sumay = new double[z];
        double mediax = 0, mediay = 0;
        for (int l = 0; l < z; l++) {
            System.out.println("x " + xx[l]);
            System.out.println("y " + yy[l]);
            //MEDIA ARITMETICA
            suma[l] = xx[l];
            sumay[l] = yy[l];
            mediax += suma[l];
            mediay += sumay[l];
        }
        mediay /= z;
        mediax /= z;
        double[] sumaXMEDIA = new double[z];
        double[] sumaYMEDIA = new double[z];
        double[] multMedia = new double[z];
        double[] sumaXMEDIACUADRADA = new double[z];
        double sumaMult = 0, sumacuadrada = 0;
        for (int j = 0; j < z; j++) {
            sumaXMEDIA[j] = xx[j] - mediax;// MULTIPLICACIÓN DE XI-XM
            sumaXMEDIACUADRADA[j] = Math.pow(sumaXMEDIA[j], 2); // CUADRADO DE XI-XM
            sumaYMEDIA[j] = yy[j] - mediay; // MLTIPLICACIONES YI - YM

            multMedia[j] = sumaXMEDIA[j] * sumaYMEDIA[j];// MULTIPLICANDO LAS DOS OPERACIONES ANTERIORES.
            sumaMult += multMedia[j]; // SUMATORIA TOTAL DE LA MULTIMPLICACIÓN (XI-MX)(YI-YM)
            sumacuadrada += sumaXMEDIACUADRADA[j];/// OBTENIENDO XI - MEDIA X AL CUADRADO

        }

        double varianza = (double) 1 / z * (sumacuadrada);
        double covarianza = (double) 1 / z * (sumaMult);
        /*
            OBTENER LA PENDIENTE y = mx+b
         */
        double pendiente = covarianza / varianza;
        double interseccion = mediay - (pendiente * mediax);

        System.out.println("Media de x es igual " + mediax);
        System.out.println("Media aritemetica de y " + mediay);
        System.out.println("xi-xm)(yq-ym) " + sumaMult);
        System.out.println("xi-xm2 " + sumacuadrada);
        System.out.println("varianza " + varianza);
        System.out.println("covarianza " + covarianza);
        System.out.println("Pendiente " + pendiente);
        System.out.println("Interseccion " + interseccion);
        System.out.println("Ecuacion de la recta");
        System.out.println("y = " + pendiente + "x + " + interseccion);

    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContornoPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContornoPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContornoPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContornoPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContornoPersona().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarGuardado;
    private javax.swing.JButton btnCargarImagen;
    private javax.swing.JButton btnCargarPuntos;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCoordenadas;
    private javax.swing.JLabel lblImagen;
    // End of variables declaration//GEN-END:variables
}
